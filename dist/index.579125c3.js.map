{"mappings":"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","sources":["src/index.js"],"sourcesContent":["\"use strict\"\r\nconst BASE_URL = 'http://localhost:3000/students';\r\nconst getBtn = document.querySelector('#get-students-btn');\r\nconst postNew = document.querySelector('#add-student-form');\r\nconst studentsTable = document.querySelector('#students-table');\r\n\r\nfunction getStudents() {\r\n    return fetch(BASE_URL)\r\n        .then(r => r.json())\r\n        .then(data => console.log(data))\r\n        .catch(error => console.error(error));\r\n}\r\n\r\nfunction renderStudents(students) {\r\n    const student = students.map(student => console.log(student));\r\n    const markUp = `\r\n        <tr data-id=\"${student.id}\">\r\n          <td>${student.id}</td>\r\n          <td>\r\n            ${student.name}\r\n            <input type=\"text\" id=\"newName-${student.id}\" placeholder=\"Нове ім'я\">\r\n          </td>\r\n          <td>\r\n            ${student.course}\r\n            <input type=\"number\" id=\"newCourse-${student.id}\" placeholder=\"Новий курс\">\r\n          </td>\r\n          <td>\r\n            ${student.skills}\r\n            <input type=\"text\" id=\"newSkills-${student.id}\" placeholder=\"Нові навички\">\r\n          </td>\r\n          <td>\r\n            ${student.email}\r\n            <input type=\"email\" id=\"newEmail-${student.id}\" placeholder=\"Новий email\">\r\n          </td>\r\n          <td>\r\n            ${student.isEnrolled ? \"Так\" : \"Ні\"}\r\n            <input type=\"checkbox\" id=\"newIsEnrolled-${student.id}\" ${student.isEnrolled ? \"checked\" : \"\"}>\r\n          </td>\r\n          <td>\r\n            <button class=\"updateBtn\" data-id=\"${student.id}\">Оновити</button>\r\n            <button class=\"deleteBtn\" data-id=\"${student.id}\">Видалити</button>\r\n          </td>\r\n        </tr>\r\n      `;\r\nstudentsTable.insertAdjacentHTML(\"beforeend\", markUp)\r\n    document.querySelectorAll('.updateBtn').forEach(button => {\r\n        button.addEventListener('click', updateStudent);\r\n    });\r\n\r\n    document.querySelectorAll('.deleteBtn').forEach(button => {\r\n        button.addEventListener('click', deleteStudent);\r\n    });\r\n}\r\n\r\ngetBtn.addEventListener('click', () => {\r\n    getStudents().then(students => renderStudents(students));\r\n});\r\n\r\nfunction addStudent(e) {\r\n    e.preventDefault();\r\n    const newStudent = {\r\n        id: document.querySelector('#id').value,\r\n        name: document.querySelector('#name').value,\r\n        course: document.querySelector('#course').value,\r\n        skills: document.querySelector('#skills').value,\r\n        email: document.querySelector('#email').value,\r\n        isEnrolled: document.querySelector('#isEnrolled').checked,\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newStudent),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n    .then(r => r.json())\r\n    .then(() => getStudents().then(students => renderStudents(students)))\r\n    .catch(error => console.error(error));\r\n}\r\n\r\npostNew.addEventListener('submit', addStudent);\r\n\r\nfunction updateStudent(e) {\r\n    e.preventDefault();\r\n    const studentId = e.target.dataset.id;\r\n    const updatedSt = {\r\n        name: document.querySelector(`#newName-${studentId}`).value,\r\n        course: document.querySelector(`#newCourse-${studentId}`).value,\r\n        skills: document.querySelector(`#newSkills-${studentId}`).value,\r\n        email: document.querySelector(`#newEmail-${studentId}`).value,\r\n        isEnrolled: document.querySelector(`#newIsEnrolled-${studentId}`).checked\r\n    };\r\n\r\n    fetch(`${BASE_URL}/${studentId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updatedSt),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n    .then(() => getStudents().then(students => renderStudents(students)))\r\n    .catch(error => console.error(error));\r\n}\r\n\r\nfunction deleteStudent(e) {\r\n    e.preventDefault();\r\n    const studentId = e.target.dataset.id;\r\n\r\n    fetch(`${BASE_URL}/${studentId}`, { method: 'DELETE' })\r\n    .then(() => getStudents().then(students => renderStudents(students)))\r\n    .catch(error => console.error(error));\r\n}\r\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}