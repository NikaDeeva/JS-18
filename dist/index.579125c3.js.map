{"mappings":"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","sources":["src/index.js"],"sourcesContent":["\"use strict\"\r\nconst BASE_URL = 'http://localhost:3000/students';\r\nconst getBtn = document.querySelector('#get-students-btn');\r\nconst postNew = document.querySelector('#add-student-form');\r\nconst studentsTable = document.querySelector('#students-table');\r\n\r\n// Отримання студентів\r\nfunction getStudents() {\r\n    return fetch(BASE_URL)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data); // Додаємо лог для перевірки\r\n            return data;\r\n        })\r\n        .catch(error => console.error(error));\r\n}\r\n\r\n// Функція рендерингу студентів\r\nfunction renderStudents(students) {\r\n    if (!Array.isArray(students)) {\r\n        console.error(students);\r\n        return;\r\n    }\r\n\r\n    studentsTable.innerHTML = students.map(student => `\r\n        <tr data-id=\"${student.id}\">\r\n          <td>${student.id}</td>\r\n          <td>\r\n            ${student.name}\r\n            <input type=\"text\" id=\"newName-${student.id}\" placeholder=\"Нове ім'я\">\r\n          </td>\r\n          <td>\r\n            ${student.course}\r\n            <input type=\"text\" id=\"newCourse-${student.id}\" placeholder=\"Новий курс\">\r\n          </td>\r\n          <td>\r\n            ${student.skills}\r\n            <input type=\"text\" id=\"newSkills-${student.id}\" placeholder=\"Нові навички\">\r\n          </td>\r\n          <td>\r\n            ${student.email}\r\n            <input type=\"email\" id=\"newEmail-${student.id}\" placeholder=\"Новий email\">\r\n          </td>\r\n          <td>\r\n            ${student.isEnrolled ? \"Так\" : \"Ні\"}\r\n            <input type=\"checkbox\" id=\"newIsEnrolled-${student.id}\" ${student.isEnrolled ? \"checked\" : \"\"}>\r\n          </td>\r\n          <td>\r\n            <button class=\"updateBtn\" data-id=\"${student.id}\">Оновити</button>\r\n            <button class=\"deleteBtn\" data-id=\"${student.id}\">Видалити</button>\r\n          </td>\r\n        </tr>\r\n      `).join('');\r\n\r\n    document.querySelectorAll('.updateBtn').forEach(button => {\r\n        button.addEventListener('click', updateStudent);\r\n    });\r\n\r\n    document.querySelectorAll('.deleteBtn').forEach(button => {\r\n        button.addEventListener('click', deleteStudent);\r\n    });\r\n}\r\n\r\n// Викликати при натисканні кнопки\r\ngetBtn.addEventListener('click', () => {\r\n    getStudents().then(students => {\r\n        if (students) renderStudents(students);\r\n    });\r\n});\r\n\r\n// Додавання нового студента\r\nfunction addStudent(e) {\r\n    e.preventDefault();\r\n    const newStudent = {\r\n        name: document.querySelector('#name').value,\r\n        course: document.querySelector('#course').value,\r\n        skills: document.querySelector('#skills').value,\r\n        email: document.querySelector('#email').value,\r\n        isEnrolled: document.querySelector('#isEnrolled').checked,\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newStudent),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n    .then(response => response.json())\r\n    .then(() => getStudents().then(students => renderStudents(students)))\r\n    .catch(error => console.error(error));\r\n}\r\n\r\npostNew.addEventListener('submit', addStudent);\r\n\r\nfunction updateStudent(e) {\r\n  e.preventDefault();\r\n  const studentId = e.target.dataset.id;\r\n  fetch(`${BASE_URL}/${studentId}`)\r\n      .then(r => r.json())\r\n      .then(currentStudent => {\r\n          const updatedSt = {\r\n              name: document.querySelector(`#newName-${studentId}`).value || currentStudent.name,\r\n              course: document.querySelector(`#newCourse-${studentId}`).value || currentStudent.course,\r\n              skills: document.querySelector(`#newSkills-${studentId}`).value || currentStudent.skills,\r\n              email: document.querySelector(`#newEmail-${studentId}`).value || currentStudent.email,\r\n              isEnrolled: document.querySelector(`#newIsEnrolled-${studentId}`).checked\r\n          };\r\n          console.log(\"Перед відправкою:\", updatedSt);\r\n\r\n          return fetch(`${BASE_URL}/${studentId}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify(updatedSt),\r\n              headers: { \"Content-Type\": \"application/json\" }\r\n          });\r\n      })\r\n      .then(r => r.json())\r\n      .then(data => {\r\n          console.log(data);\r\n          alert(`Студент ${data.name} оновлений!`);\r\n          return getStudents().then(students => renderStudents(students));\r\n      })\r\n      .catch(error => console.error(error));\r\n      document.querySelectorAll('.updateBtn').forEach(button => {\r\n        button.addEventListener('click', updateStudent);\r\n    });\r\n    document.querySelectorAll('.deleteBtn').forEach(button => {\r\n        button.addEventListener('click', deleteStudent);\r\n    });\r\n    \r\n}\r\n\r\n\r\nfunction deleteStudent(e) {\r\n    e.preventDefault();\r\n    const studentId = e.target.dataset.id;\r\n\r\n    fetch(`${BASE_URL}/${studentId}`, { method: 'DELETE' })\r\n    .then(() => getStudents().then(students => renderStudents(students)))\r\n    .catch(error => console.error(error));\r\n}\r\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}